 @Slip-15
 Q.1)WriteAjaxprogramtofetchsuggestionswhenisuseristypi
 Suggestions.Hintcreatearrayofsuggesti
 nginatextbox.(egli
 kegoogle
 onsandmatchingstringwillbedispl
 ayed).
 Ans:
 <!DOCTYPEhtml>
 <html>
 <head>
 <titl
 e>AJAXAutoSuggestionsExample</titl
 e>
<script>
 FunctionfetchSuggesti
 ons(str){
 If(str.
 length==0){
 Document.getElementById(“suggesti
 Return;
 }
 Varsuggestions=[“appl
 ons”).i
 nnerHTML=“”;
 e”,“banana”,“cherry”,“dat
 es”,“el
 derberry”,“fi
 “grape”,“honeydew”,“ki
 wi”,“l
 emon”];
 Varmatches=[];
 For(vari=0;i<suggestions.l
 If(suggesti
 ength;i++){
 ons[i]
 .toLowerCase().
 startsWith(str.
 g”,
 toLowerCase())){
 Matches.push(suggesti
 ons[i]
 );
 }
 }
 If(matches.l
 ength>0){
 Document.getElementById(“suggesti
 ons”).i
 matches.joi
 n(“<br>”);
 }else{
 Document.getElementById(“suggesti
 nnerHTML=
 ons”).i
 nnerHTML=“No
 suggestionsfound”;
 }
 </scri
 pt>
 </head>
 <body>
 }
 <inputtype=”text”onkeyup=”fetchSuggesti
 ons(thi
 <divid=”suggesti
 ons”></div>
 </body>
 </html>
 s.value)”>


Q.2)Createthefoll
 owingdatasetinpython&Convertthecategori
 calvaluesintonumeri
 format.Appl
 y
 Theapriorial
 gorithmontheabovedatasettogeneratethefrequenti
 rules.Repeat
 Theprocesswithdifferentmi
 n_supvalues.
 No|Company| model|year
 1. Tata.
 Nexon. 2017
 2. MG. Astor. 2021
 3. Kia.
 Seltos. 2019
 4. Hyundai. Creta. 2015
 Ans:
 Importpandasaspd
 #Createthedataset
 Data={‘No’:[1,2,3,4]
 ‘Company’:[‘
 ,
 Tata’,‘
 MG’,‘Kia’
 ‘Model’
 :[‘Nexon’
 ,‘Astor’
 ‘Year’
 ,‘Hyundai’
 ,‘Seltos’
 :[2017,2021,2019,2015]}
 Df=pd.DataFrame(data)
 #Convertcategoricalval
 ],
 ,‘Creta’
 ],
 uesintonumericformat
 Df[‘
 Company’]=pd.Categorical
 (df[‘
 Df[‘
 Model’]=pd.Categori
 cal(df[
 Company’])
 ‘Model’
 ])
 Df[‘
 Company’]=df[‘
 Company’].cat.
 codes
 c
 temsetsandassociation
Df[‘
 Model’]=df[‘
 Model’].
 cat.codes
 Print(df)
 Frommlxtend.frequent_patternsi
 mportapriori
 Frommlxtend.frequent_patternsi
 mportassociati
 on_rules
 #Generatefrequentitemsetswithmin_sup=0.5
 Frequent_i
 temsets=apriori
 (df,min_support=0.
 Print(fr
 equent_itemsets)
 #Generateassociati
 5,use_colnames=True)
 onruleswithmin_threshol
 d=0.7
 Associati
 on_rules=associati
 on_rules(frequent_i
 min_threshol
 d=0.7)
 Print(associ
 ation_rul
 es