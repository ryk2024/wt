 @Slip-16
 temsets,metri
 c=”confidence”,
 Q.1)WriteAjaxprogramtogetbookdetailsfromXMLfilewhenuserselectabookname.
 CreateXML
 Fileforstori
 ngdetailsofbook(ti
 tle,author,year,pri
 Ans:
 Xmlfilebook_detai
 ls.xml
 <books>
 <book>
 <titl
 e>TheGreatGatsby</ti
 <author>F.ScottFi
 tzgeral
 ce).
 tle>
 d</author>
<year>1925</year>
 <price>10.
 99</price>
 </book>
 <book>
 <titl
 e>ToKillaMockingbird</ti
 tle>
 <author>HarperLee</author>
 <year>1960</year>
 <price>8.
 99</price>
 </book>
 <book>
 <titl
 e>1984</titl
 e>
 <author>GeorgeOrwell
 <year>1949</year>
 <price>6.
 99</price>
 </book>
 <book>
 <titl
 </author>
 e>PrideandPrejudi
 ce</ti
 tle>
 <author>JaneAusten</author>
 <year>1813</year>
 <price>7.
 99</price>
 </book>
 </books>
 Ajaxfil
 e
 <!DOCTYPEhtml>
 <html>
 <head>
<title>BookDetails</title>
 <scriptsrc=https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js></script>
 <script>
 $(document).ready(function(){
 $(“select”).change(function(){
 Varbook=$(this).val();
 $.ajax({
 url:“book_details.xml”,
 dataType:“xml”,
 success:function(xml){
 $(xml).find(‘book’).each(function(){
 Vartitle=$(this).find(‘title’).text();
 If(title==book){
 Varauthor=
 $(this).find(‘author’).text();
 Varyear=$(this).find(‘year’).text();
 Varprice=$(this).find(‘price’).text();
 $(“#details”).html(“Author:“+author
 +“<br>Year:“+year+“<br>Price:“+price);
 }
 });
 }
 });
 });
 });
 </script>
 </head>
 <body>
 <select>
<option>Sel
 ectabook</option>
 <option>TheGreatGatsby</opti
 on>
 <option>ToKil
 laMockingbird</opti
 <option>1984</opti
 on>
 <option>Pri
 on>
 deandPrejudice</opti
 on>
 </select>
 <divid=”detai
 ls”></di
 </body>
 </html>
 v>



 Q2).Consideranytextparagraph.Preprocessthetexttoremoveanyspeci
 digits.
 Generatethesummaryusingextracti
 vesummarizationpprocess.
 Ans:
 Importre
 Importnltk
 Fromnltk.corpusi
 Fromnltk.tokeni
 mportstopwords
 zeimportsent_tokeni
 ze,word_tokeni
 Fromheapqimportnlargest
 #Sampletextparagraphyoucanwriteanytext
 Text=“Naturallanguageprocessi
 ze
 ng(NLP)isasubfieldoflingui
 informati
 onengineering,andarti
 fici
 alintel
 ligenceconcernedwiththei
 computersandhumanlanguages,inparticul
 alcharactersand
 stics,computersci
 ence,
 nteracti
 onsbetween
 arhowtoprogramcomputerstoprocessand
 analyzelargeamountsofnaturall
 anguagedata.Challengesinnaturall
 anguageprocessing
 frequentl
 yinvolvespeechrecogni
 tion,naturall
 generati
 on.Thehistoryofnaturall
 anguageunderstanding,andnaturall
 anguageprocessinggenerall
 anguage
 ystartedinthe1950s,al
 though
 workcanbefoundfromearlierperiods.”
#Removespecialcharactersanddigits
 Text=re.sub(‘
 [^a-zA-Z]
 ’,‘‘
 ,text)
 #Tokenizethetextintosentences
 Sentences=sent_tokeni
 ze(text)
 #Tokenizeeachsentenceintowordsandremovestopwords
 Stop_words=set(stopwords.words(‘
 english’
 Words=[]
 Forsentenceinsentences:
 Words.extend(word_tokeni
 ze(sentence))
 ))
 Words=[word.lower()forwordinwordsifword.l
 ower()notinstop_words]
 #Calculatewordfrequency
 Word_freq=nltk.FreqDi
 st(words)
 #Calculatesentencescoresbasedonwordfrequency
 Sentence_scores={}
 Forsentenceinsentences:
 Forwordinword_tokenize(sentence.
 Ifwordinword_freq:
 Iflen(sentence.
 split(‘‘
 ))<30:
 lower()):
 Ifsentencenotinsentence_scores:
 Sentence_scores[sentence]=word_freq[
 Else:
 word]
 Sentence_scores[sentence]+=word_freq[
 word]
 #Generatesummarybyselectingtop3sentenceswithhighestscores
Summary_sentences=nlargest(3,sentence_scores,key=sentence_scores.
 get)
 Summary=‘‘.join(summary_sentences)
 Print(summary)